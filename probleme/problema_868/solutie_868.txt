#include <iostream>
#include <fstream>
#include <cassert>
using namespace std;

ifstream fin("acces1.in");
ofstream fout("acces1.out");

int n , m;
short a[1001][1001];
int  x[1000001], y[1000001];
char P[1001][1001];


const int dx[] = {0 , 0 , 1 , -1}, 
          dy[] = {1 , -1 , 0 , 0};

int main(){
    fin >> n >> m;
    int st = 1 , dr = 0;
    for(int i = 1 ; i <= n ; i ++)
        for(int j = 1 ; j <= m ; j ++)
        {
            fin >> P[i][j];
            if(P[i][j] == 'P')
            {
                dr ++;
                x[dr] = i, y[dr] = j;
                a[i][j] = 1;
            }
        }
    fin.close();
    
    while(st <= dr)
    {
        int i = x[st], j = y[st];
        for(int k = 0 ; k < 4 ; k ++)
        {
            int ii = i + dx[k], jj = j + dy[k];
            if( ii > 0 && ii <= n && jj > 0 && jj <= m && P[ii][jj] !='#' && a[ii][jj] == 0)
            {
                a[ii][jj] = a[i][j] + 1;
                dr ++;
                x[dr] = ii, y[dr] = jj;
            }
        }
        st ++;
    }
    
    for(int i = 1 ; i <= n ; i ++)
    {
        for(int j = 1 ; j <= m ; j ++)
            if(a[i][j] > 0)
                fout << a[i][j] - 1 << " ";
            else
                fout << P[i][j] << " ";
        fout << "\n";
    }
    
    fout.close();
    return 0;
}