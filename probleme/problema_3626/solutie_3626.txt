#include <bits/stdc++.h>
using namespace std;

int MinLength(int a[], int n, int S)
{
    int s, i, len;
    unordered_map<int, int> M;
    M[0] = -1;
    len = n + 1;
    s = 0;
    for(i = 0; i < n; i++)
    {
        s += a[i];
        if(M.find(s - S) != M.end())
        {
            len = min(len, i - M[s - S]);
        }
        M[s] = i;
    }
    if (len == n + 1) len = -1;
    return len;
}

int a[50003], n, S;

void F(const char fis[], int n, int S, int L)
{
    int i;
    ofstream fout(fis);
    srand(time(0));
    fout << n << " " << S << "\n";
    for (i = 1; i <= n; i++)
        a[i] = rand() % L - L / 2;
    for (i = 1; i < n; i++)
        fout << a[i] << " ";
    fout << a[n] << "\n";
    fout.close();
}

int main()
{
    int i;
    cin >> n >> S;
    for (i = 0; i < n; i++)
        cin >> a[i];
    i = MinLength(a, n, S);
    if (i == -1) cout << "nu exista\n";
    else cout << i << "\n";

    return 0;
}